version: '3'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - LOG_SHORT_TIME=true
      - LOG_FIELD_BLACKLIST=caller,sequence_number
      - LOG_LEVEL=debug
      - POSTGRES_URL=postgres://ijci:ijci@postgres/ijci?sslmode=disable
      - S3_ENDPOINT=http://minio:9000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=XCJ8Jwy7eUqqwJfv9DJJ
      - AWS_SECRET_ACCESS_KEY=urx4H3kAS5zpKSLf7wVXGDvFYxCNdHbVcndNRvWZ
      - AMQP_EXCHANGE=ijci
      - AMQP_ROUTING_KEY=key
      - AMQP_URI=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - minio
      - postgres
      - rabbitmq
    ports:
      - 5000:5000

  agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      - LOG_SHORT_TIME=true
      - LOG_FIELD_BLACKLIST=caller,sequence_number
      - LOG_LEVEL=debug
      - API_ADDR=http://api:5000
      - AMQP_CONSUMER_TAG=ctag
      - AMQP_EXCHANGE=ijci
      - AMQP_ROUTING_KEY=key
      - AMQP_QUEUE_NAME=build-requests
      - AMQP_URI=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - api
      - rabbitmq
    volumes:
      - ./repos:/repos
      - /var/run/docker.sock:/var/run/docker.sock

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    environment:
      - IJCI_POSTGRES_URL=postgres://ijci:ijci@postgres/ijci?sslmode=disable
    depends_on:
      - postgres

  # External Services

  postgres:
    image: postgres:10.5
    environment:
      - POSTGRES_DB=ijci
      - POSTGRES_USER=ijci
      - POSTGRES_PASSWORD=ijci
    ports:
      - 5432:5432

  minio:
    image: minio/minio
    command: server /data
    environment:
      - MINIO_ACCESS_KEY=XCJ8Jwy7eUqqwJfv9DJJ
      - MINIO_SECRET_KEY=urx4H3kAS5zpKSLf7wVXGDvFYxCNdHbVcndNRvWZ
    ports:
      - 9000:9000

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
